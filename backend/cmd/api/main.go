package main

import (
	"log"
	"net/http"
	"time"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	h "mantest/backend/internal/handlers"
)

func main() {
	router := gin.Default()

	// 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CORS (‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤)
	router.Use(cors.New(cors.Config{
		// üí° ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÉ‡∏ä‡πâ Wildcard (*) ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤ CORS ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏õ‡∏±‡∏ç‡∏´‡∏≤
		AllowOrigins:     []string{"*"}, 
		// üí° ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏° GET ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Browser ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ 404/405 ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢ URL ‡∏ï‡∏£‡∏á‡πÜ
		AllowMethods:     []string{"POST", "OPTIONS", "GET"}, 
		AllowHeaders:     []string{"Origin", "Content-Type", "Authorization"},
		ExposeHeaders:    []string{"Content-Length"},
		AllowCredentials: true,
		MaxAge:           12 * time.Hour,
	}))

	// Route ‡∏ó‡∏î‡∏™‡∏≠‡∏ö
	router.GET("/", func(c *gin.Context) {
		c.String(http.StatusOK, "API Server is running and updated!")
	})

	// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Route Login ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏° Path
	router.POST("/api/v1/login", h.LoginHandler) 

	// 4. ‡∏£‡∏±‡∏ô Server
	if err := router.Run(":8080"); err != nil {
		log.Fatalf("Server failed to start: %v", err)
	}

	log.Println("Server is running on :8080")
}